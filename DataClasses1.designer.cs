#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace User_Login
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LoginDB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertadmin(admin instance);
    partial void Updateadmin(admin instance);
    partial void Deleteadmin(admin instance);
    partial void Insertord(ord instance);
    partial void Updateord(ord instance);
    partial void Deleteord(ord instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::User_Login.Properties.Settings.Default.LoginDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<admin> admins
		{
			get
			{
				return this.GetTable<admin>();
			}
		}
		
		public System.Data.Linq.Table<ord> ords
		{
			get
			{
				return this.GetTable<ord>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.admin")]
	public partial class admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _NIC_Number;
		
		private string _UserName;
		
		private string _Pass_word;
		
		private string _Re_password;
		
		private string _tel_no;
		
		private string _Gender;
		
		private EntitySet<ord> _ords;
		
		private EntityRef<ord> _ord;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNIC_NumberChanging(string value);
    partial void OnNIC_NumberChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPass_wordChanging(string value);
    partial void OnPass_wordChanged();
    partial void OnRe_passwordChanging(string value);
    partial void OnRe_passwordChanged();
    partial void Ontel_noChanging(string value);
    partial void Ontel_noChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    #endregion
		
		public admin()
		{
			this._ords = new EntitySet<ord>(new Action<ord>(this.attach_ords), new Action<ord>(this.detach_ords));
			this._ord = default(EntityRef<ord>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIC_Number", DbType="VarChar(MAX)")]
		public string NIC_Number
		{
			get
			{
				return this._NIC_Number;
			}
			set
			{
				if ((this._NIC_Number != value))
				{
					this.OnNIC_NumberChanging(value);
					this.SendPropertyChanging();
					this._NIC_Number = value;
					this.SendPropertyChanged("NIC_Number");
					this.OnNIC_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(MAX)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass_word", DbType="VarChar(MAX)")]
		public string Pass_word
		{
			get
			{
				return this._Pass_word;
			}
			set
			{
				if ((this._Pass_word != value))
				{
					this.OnPass_wordChanging(value);
					this.SendPropertyChanging();
					this._Pass_word = value;
					this.SendPropertyChanged("Pass_word");
					this.OnPass_wordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Re_password", DbType="VarChar(MAX)")]
		public string Re_password
		{
			get
			{
				return this._Re_password;
			}
			set
			{
				if ((this._Re_password != value))
				{
					this.OnRe_passwordChanging(value);
					this.SendPropertyChanging();
					this._Re_password = value;
					this.SendPropertyChanged("Re_password");
					this.OnRe_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel_no", DbType="VarChar(MAX)")]
		public string tel_no
		{
			get
			{
				return this._tel_no;
			}
			set
			{
				if ((this._tel_no != value))
				{
					this.Ontel_noChanging(value);
					this.SendPropertyChanging();
					this._tel_no = value;
					this.SendPropertyChanged("tel_no");
					this.Ontel_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(MAX)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="admin_ord", Storage="_ords", ThisKey="id", OtherKey="id")]
		public EntitySet<ord> ords
		{
			get
			{
				return this._ords;
			}
			set
			{
				this._ords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="admin_ord1", Storage="_ord", ThisKey="id", OtherKey="vehicle_ID", IsUnique=true, IsForeignKey=false)]
		public ord ord
		{
			get
			{
				return this._ord.Entity;
			}
			set
			{
				ord previousValue = this._ord.Entity;
				if (((previousValue != value) 
							|| (this._ord.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ord.Entity = null;
						previousValue.admin1 = null;
					}
					this._ord.Entity = value;
					if ((value != null))
					{
						value.admin1 = this;
					}
					this.SendPropertyChanged("ord");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ords(ord entity)
		{
			this.SendPropertyChanging();
			entity.admin = this;
		}
		
		private void detach_ords(ord entity)
		{
			this.SendPropertyChanging();
			entity.admin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ord")]
	public partial class ord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _user_name;
		
		private int _vehicle_ID;
		
		private string _pick_up;
		
		private string _destination;
		
		private string _passengers;
		
		private System.Nullable<System.DateTime> _rent_date;
		
		private string _need_driver;
		
		private EntityRef<admin> _admin;
		
		private EntityRef<admin> _admin1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void Onvehicle_IDChanging(int value);
    partial void Onvehicle_IDChanged();
    partial void Onpick_upChanging(string value);
    partial void Onpick_upChanged();
    partial void OndestinationChanging(string value);
    partial void OndestinationChanged();
    partial void OnpassengersChanging(string value);
    partial void OnpassengersChanged();
    partial void Onrent_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onrent_dateChanged();
    partial void Onneed_driverChanging(string value);
    partial void Onneed_driverChanged();
    #endregion
		
		public ord()
		{
			this._admin = default(EntityRef<admin>);
			this._admin1 = default(EntityRef<admin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="VarChar(MAX)")]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicle_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int vehicle_ID
		{
			get
			{
				return this._vehicle_ID;
			}
			set
			{
				if ((this._vehicle_ID != value))
				{
					if (this._admin1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvehicle_IDChanging(value);
					this.SendPropertyChanging();
					this._vehicle_ID = value;
					this.SendPropertyChanged("vehicle_ID");
					this.Onvehicle_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pick_up", DbType="VarChar(MAX)")]
		public string pick_up
		{
			get
			{
				return this._pick_up;
			}
			set
			{
				if ((this._pick_up != value))
				{
					this.Onpick_upChanging(value);
					this.SendPropertyChanging();
					this._pick_up = value;
					this.SendPropertyChanged("pick_up");
					this.Onpick_upChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_destination", DbType="VarChar(MAX)")]
		public string destination
		{
			get
			{
				return this._destination;
			}
			set
			{
				if ((this._destination != value))
				{
					this.OndestinationChanging(value);
					this.SendPropertyChanging();
					this._destination = value;
					this.SendPropertyChanged("destination");
					this.OndestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passengers", DbType="VarChar(MAX)")]
		public string passengers
		{
			get
			{
				return this._passengers;
			}
			set
			{
				if ((this._passengers != value))
				{
					this.OnpassengersChanging(value);
					this.SendPropertyChanging();
					this._passengers = value;
					this.SendPropertyChanged("passengers");
					this.OnpassengersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rent_date", DbType="Date")]
		public System.Nullable<System.DateTime> rent_date
		{
			get
			{
				return this._rent_date;
			}
			set
			{
				if ((this._rent_date != value))
				{
					this.Onrent_dateChanging(value);
					this.SendPropertyChanging();
					this._rent_date = value;
					this.SendPropertyChanged("rent_date");
					this.Onrent_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_need_driver", DbType="VarChar(MAX)")]
		public string need_driver
		{
			get
			{
				return this._need_driver;
			}
			set
			{
				if ((this._need_driver != value))
				{
					this.Onneed_driverChanging(value);
					this.SendPropertyChanging();
					this._need_driver = value;
					this.SendPropertyChanged("need_driver");
					this.Onneed_driverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="admin_ord", Storage="_admin", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public admin admin
		{
			get
			{
				return this._admin.Entity;
			}
			set
			{
				admin previousValue = this._admin.Entity;
				if (((previousValue != value) 
							|| (this._admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._admin.Entity = null;
						previousValue.ords.Remove(this);
					}
					this._admin.Entity = value;
					if ((value != null))
					{
						value.ords.Add(this);
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("admin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="admin_ord1", Storage="_admin1", ThisKey="vehicle_ID", OtherKey="id", IsForeignKey=true)]
		public admin admin1
		{
			get
			{
				return this._admin1.Entity;
			}
			set
			{
				admin previousValue = this._admin1.Entity;
				if (((previousValue != value) 
							|| (this._admin1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._admin1.Entity = null;
						previousValue.ord = null;
					}
					this._admin1.Entity = value;
					if ((value != null))
					{
						value.ord = this;
						this._vehicle_ID = value.id;
					}
					else
					{
						this._vehicle_ID = default(int);
					}
					this.SendPropertyChanged("admin1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
